{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Project\\\\Project D\\\\Front-End\\\\uitest\\\\src\\\\components\\\\navdrawer\\\\navdrawer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Drawer } from '@mui/material';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport PersonIcon from '@mui/icons-material/Person';\nimport \"./navdrawer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/// <summary>\n/// This is the NavBar component.\n/// </summary>\nexport default function NavDrawer(props) {\n  _s();\n\n  const {\n    name,\n    children,\n    imageLink\n  } = props;\n  const [open, setOpen] = useState(\"left\"); // Create a condition that targets viewports at least 768px wide\n\n  const mediaQuery = window.matchMedia('(min-width: 1000px)');\n\n  function handleViewChange(e) {\n    // Check if the media query is true\n    if (e.matches) {\n      // If true, show the drawer\n      console.log(\"show drawer\");\n      setOpen(\"left\");\n    } else {\n      console.log(\"hide drawer\");\n      setOpen(\"top\");\n    }\n  } // Register event listener\n\n\n  mediaQuery.addListener(handleViewChange); // Initial check\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"navdraw\",\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"{open}\",\n      variant: \"permanent\",\n      PaperProps: {\n        style: {\n          marginTop: 27,\n          marginLeft: 40,\n          marginBottom: 2,\n          background: \"linear-gradient(0deg, rgba(103, 80, 164, 0.05), rgba(103, 80, 164, 0.05)), #FFFBFE\"\n        }\n      },\n      ModalProps: {\n        keepMounted: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chattop chatprofile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sp-Lockup\",\n          children: [/*#__PURE__*/_jsxDEV(DarkModeIcon, {\n            className: \"DMI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Cursor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PersonIcon, {\n            className: \"PersonIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile\",\n            width: \"75\",\n            alt: \"\",\n            src: imageLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"product\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavDrawer, \"5dY+whPZ3NWg/mSbkvfIh4g28CI=\");\n\n_c = NavDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavDrawer\");","map":{"version":3,"sources":["D:/School/Project/Project D/Front-End/uitest/src/components/navdrawer/navdrawer.tsx"],"names":["React","useState","Drawer","DarkModeIcon","PersonIcon","NavDrawer","props","name","children","imageLink","open","setOpen","mediaQuery","window","matchMedia","handleViewChange","e","matches","console","log","addListener","style","marginTop","marginLeft","marginBottom","background","keepMounted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAAQC,MAAR,QAAsB,eAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,iBAAP;;AAUA;AACA;AACA;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAuC;AAAA;;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAAgCH,KAAtC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,MAAD,CAAhC,CAFkD,CAIlD;;AACA,QAAMW,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkB,qBAAlB,CAAnB;;AAEA,WAASC,gBAAT,CAA0BC,CAA1B,EAAmC;AAC/B;AACA,QAAIA,CAAC,CAACC,OAAN,EAAe;AACX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAR,MAAAA,OAAO,CAAC,MAAD,CAAP;AACH,KAJD,MAKI;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAR,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAlBiD,CAmBlD;;;AACAC,EAAAA,UAAU,CAACQ,WAAX,CAAuBL,gBAAvB,EApBkD,CAqBlD;;AAGA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,MAAM,EAAC,QADX;AAEI,MAAA,OAAO,EAAC,WAFZ;AAGI,MAAA,UAAU,EAAE;AAAEM,QAAAA,KAAK,EAAE;AACjBC,UAAAA,SAAS,EAAE,EADM;AAEjBC,UAAAA,UAAU,EAAE,EAFK;AAGjBC,UAAAA,YAAY,EAAE,CAHG;AAIjBC,UAAAA,UAAU,EAAE;AAJK;AAAT,OAHhB;AASI,MAAA,UAAU,EAAE;AACRC,QAAAA,WAAW,EAAE;AADL,OAThB;AAAA,8BAYI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI,QAAC,YAAD;AAAc,YAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,KAAK,EAAC,IAA/B;AAAoC,YAAA,GAAG,EAAC,EAAxC;AAA2C,YAAA,GAAG,EAAEjB;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAO,YAAA,SAAS,EAAC,SAAjB;AAAA,sBAA4BF;AAA5B;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ,EAqBKC,QArBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GApDuBH,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Drawer,} from '@mui/material';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport \"./navdrawer.css\";\r\n\r\n\r\ntype NavBarProps = {\r\n    name?: string;\r\n    children?: React.ReactNode;\r\n    imageLink?: string;\r\n\r\n};\r\n\r\n/// <summary>\r\n/// This is the NavBar component.\r\n/// </summary>\r\nexport default function NavDrawer(props: NavBarProps) {\r\n    const { name, children, imageLink } = props;\r\n    const [open, setOpen] = useState(\"left\");\r\n\r\n    // Create a condition that targets viewports at least 768px wide\r\n    const mediaQuery = window.matchMedia('(min-width: 1000px)')\r\n    \r\n    function handleViewChange(e : any) {\r\n        // Check if the media query is true\r\n        if (e.matches) {\r\n            // If true, show the drawer\r\n            console.log(\"show drawer\");\r\n            setOpen(\"left\");\r\n        }\r\n        else{\r\n            console.log(\"hide drawer\");\r\n            setOpen(\"top\");\r\n        }\r\n    }\r\n    // Register event listener\r\n    mediaQuery.addListener(handleViewChange);\r\n    // Initial check\r\n\r\n\r\n    return (\r\n        <div id=\"navdraw\">\r\n            <Drawer\r\n                anchor=\"{open}\"\r\n                variant=\"permanent\"\r\n                PaperProps={{ style: {\r\n                    marginTop: 27,\r\n                    marginLeft: 40,\r\n                    marginBottom: 2,                        \r\n                    background: \"linear-gradient(0deg, rgba(103, 80, 164, 0.05), rgba(103, 80, 164, 0.05)), #FFFBFE\",\r\n                } }}\r\n                ModalProps={{\r\n                    keepMounted: true,\r\n                }}>\r\n                <div className=\"chattop chatprofile\">\r\n                    <div className=\"sp-Lockup\">\r\n                        <DarkModeIcon className=\"DMI\"/>\r\n                        <div className=\"Cursor\"></div>\r\n                        <PersonIcon className=\"PersonIcon\" />\r\n                        <img className=\"profile\" width=\"75\" alt=\"\" src={imageLink}/>\r\n                        <label className=\"product\">{name}</label>\r\n                    </div>                        \r\n                </div>\r\n                {children}          \r\n            </Drawer>\r\n        </div>\r\n    );    \r\n     \r\n}"]},"metadata":{},"sourceType":"module"}