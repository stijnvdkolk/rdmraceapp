[{"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\index.tsx":"1","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\reportWebVitals.ts":"2","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\Routes.tsx":"3","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\App.tsx":"4","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\pages\\Login\\Login.tsx":"5","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\pages\\SignUp\\SignUp.tsx":"6","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\backgrounds\\background.tsx":"7","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\button\\button.tsx":"8","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\pages\\Chat\\Chat.tsx":"9","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\navListItem\\navListItem.tsx":"10","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\ChatWindow\\ChatWindow.tsx":"11","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\navdrawer\\navdrawer.tsx":"12"},{"size":573,"mtime":1637577156543,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1637576139180,"results":"15","hashOfConfig":"14"},{"size":581,"mtime":1637577231235,"results":"16","hashOfConfig":"14"},{"size":675,"mtime":1637576139148,"results":"17","hashOfConfig":"14"},{"size":1402,"mtime":1637576139177,"results":"18","hashOfConfig":"14"},{"size":2019,"mtime":1637576139179,"results":"19","hashOfConfig":"14"},{"size":839,"mtime":1637576139168,"results":"20","hashOfConfig":"14"},{"size":737,"mtime":1637576139169,"results":"21","hashOfConfig":"14"},{"size":3310,"mtime":1637576957482,"results":"22","hashOfConfig":"14"},{"size":702,"mtime":1637576139170,"results":"23","hashOfConfig":"14"},{"size":50,"mtime":1637576992434,"results":"24","hashOfConfig":"14"},{"size":4659,"mtime":1637576139172,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1q82hgx",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\index.tsx",[],["52","53"],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\reportWebVitals.ts",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\Routes.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\App.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\pages\\SignUp\\SignUp.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\backgrounds\\background.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\button\\button.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\pages\\Chat\\Chat.tsx",["54"],"import React, { useEffect, useState } from 'react';\r\nimport '../../App.css'; //voor app css voor background\r\nimport './Chat.css';\r\nimport Navdrawer from '../../components/navdrawer/navdrawer';\r\nimport { CircularProgress, Divider} from '@mui/material';\r\nimport AccessibleIcon from '@mui/icons-material/Accessible';\r\nimport ChildCareIcon from '@mui/icons-material/ChildCare';\r\nimport ChildFriendlyIcon from '@mui/icons-material/ChildFriendly';\r\nimport EuroIcon from '@mui/icons-material/Euro';\r\nimport NavListItem from '../../components/navListItem/navListItem';\r\nimport Background from '../../components/backgrounds/background';\r\nimport {Link} from \"react-router-dom\";\r\nclass Person\r\n{\r\n    Id : number | undefined;\r\n    name : string | undefined;\r\n    profilePicture : string | undefined;\r\n}\r\n\r\nexport default function Chat() {\r\n    const [error, setError] = useState<any>(null);\r\n    const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n    const [items, setItems] = useState<Person[] | undefined>(undefined); //Person[]\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://localhost:5000/testing\") // Debug\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    \r\n    console.log(items);\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoaded ? (\r\n                    <div id=\"out\" className=\"App dark background\">\r\n                        <Background/>\r\n                        <div className=\"NavBar\">   \r\n                            <Navdrawer name={ items != null ? items![0].name : \"\" } imageLink={ items != null ? items![0].profilePicture : \"\" }>\r\n                            <Divider/>\r\n                            <label className=\"label leftside navbar\">Nieuws Kanalen</label>\r\n                            <NavListItem text=\"Belangrijk Nieuws\" icon={<AccessibleIcon />} onClickCommand={() => console.log(\"Nieuw Icons!\")}/>\r\n                            <Divider />\r\n                            <label className=\"label leftside navbar\">Chat Kanalen</label>\r\n                            <NavListItem text=\"Publiek\" icon={<ChildCareIcon />} onClickCommand={() => console.log(\"Nieuw Icons!\")}/>\r\n                            <NavListItem text=\"Team Genoten\" icon={<ChildFriendlyIcon />} onClickCommand={() => console.log(\"Nieuw Icons!\")}/>\r\n                            <NavListItem text=\"one more channel cuz why not\" icon={<EuroIcon />}/>\r\n                            </Navdrawer>\r\n                        </div>\r\n                        <div className=\"Content\">\r\n                            <h5>Hello World</h5>\r\n                            \r\n                            <Link to=\"/Chat/Publiek\"/>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <CircularProgress />\r\n                )\r\n            }\r\n        </>\r\n        \r\n    );\r\n}","C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\navListItem\\navListItem.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\ChatWindow\\ChatWindow.tsx",[],"C:\\Users\\megah\\Documents\\GitHub\\phidippi\\src\\components\\navdrawer\\navdrawer.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":21,"column":12,"nodeType":"61","messageId":"62","endLine":21,"endColumn":17},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]